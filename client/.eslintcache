[{"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\Dashboard.jsx":"1","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\Experience.jsx":"2","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\Education.jsx":"3","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\DashboardActions.jsx":"4","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\auth\\Login.jsx":"5","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\utils\\setAuthToken.js":"6","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile-forms\\UpdateProfile.jsx":"7","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\post\\CommentItem.jsx":"8","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\auth.js":"9","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\post.js":"10","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\posts\\PostItem.jsx":"11","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\posts\\Posts.jsx":"12","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\auth\\SignUp.jsx":"13","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile-forms\\AddExperience.jsx":"14","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\Spinner.jsx":"15","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile\\ProfileGithub.jsx":"16","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\profile.js":"17","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profiles\\ProfileItem.jsx":"18","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\store.js":"19","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\posts\\PostForm.jsx":"20","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\actions\\profile.js":"21","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\index.js":"22","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\post\\Post.jsx":"23","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\actions\\alert.js":"24","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\App.jsx":"25","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\routing\\PrivateRoute.jsx":"26","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile\\Profile.jsx":"27","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\actions\\post.js":"28","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\layout\\Navbar.jsx":"29","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile-forms\\CreateProfile.jsx":"30","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\post\\CommentForm.jsx":"31","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile\\ProfileEducation.jsx":"32","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\layout\\Alert.jsx":"33","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\layout\\Landing.jsx":"34","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\alert.js":"35"},{"size":4722,"mtime":1618903141558,"results":"36","hashOfConfig":"37"},{"size":1613,"mtime":1618322442161,"results":"38","hashOfConfig":"37"},{"size":1750,"mtime":1618321115704,"results":"39","hashOfConfig":"37"},{"size":2511,"mtime":1618904638359,"results":"40","hashOfConfig":"37"},{"size":3467,"mtime":1618820263686,"results":"41","hashOfConfig":"37"},{"size":414,"mtime":1611818841256,"results":"42","hashOfConfig":"37"},{"size":9198,"mtime":1613657076811,"results":"43","hashOfConfig":"37"},{"size":1437,"mtime":1613937698344,"results":"44","hashOfConfig":"37"},{"size":1228,"mtime":1613544475085,"results":"45","hashOfConfig":"37"},{"size":1548,"mtime":1614607912402,"results":"46","hashOfConfig":"37"},{"size":3790,"mtime":1618676925480,"results":"47","hashOfConfig":"37"},{"size":1638,"mtime":1618404197114,"results":"48","hashOfConfig":"37"},{"size":5791,"mtime":1618754245204,"results":"49","hashOfConfig":"37"},{"size":3582,"mtime":1613494595525,"results":"50","hashOfConfig":"37"},{"size":238,"mtime":1613637740654,"results":"51","hashOfConfig":"37"},{"size":1713,"mtime":1613837004728,"results":"52","hashOfConfig":"37"},{"size":1063,"mtime":1613631554434,"results":"53","hashOfConfig":"37"},{"size":5699,"mtime":1618677203994,"results":"54","hashOfConfig":"37"},{"size":399,"mtime":1611239061524,"results":"55","hashOfConfig":"37"},{"size":1545,"mtime":1613928068807,"results":"56","hashOfConfig":"37"},{"size":6315,"mtime":1613976977761,"results":"57","hashOfConfig":"37"},{"size":202,"mtime":1612024872736,"results":"58","hashOfConfig":"37"},{"size":1331,"mtime":1613938154222,"results":"59","hashOfConfig":"37"},{"size":375,"mtime":1611840369477,"results":"60","hashOfConfig":"37"},{"size":2960,"mtime":1618903098021,"results":"61","hashOfConfig":"37"},{"size":662,"mtime":1612026557138,"results":"62","hashOfConfig":"37"},{"size":2049,"mtime":1614523512521,"results":"63","hashOfConfig":"37"},{"size":4085,"mtime":1613934952984,"results":"64","hashOfConfig":"37"},{"size":1755,"mtime":1618829823379,"results":"65","hashOfConfig":"37"},{"size":8089,"mtime":1613401682040,"results":"66","hashOfConfig":"37"},{"size":1237,"mtime":1613938115172,"results":"67","hashOfConfig":"37"},{"size":1287,"mtime":1613834023265,"results":"68","hashOfConfig":"37"},{"size":596,"mtime":1611732108105,"results":"69","hashOfConfig":"37"},{"size":1150,"mtime":1612280266476,"results":"70","hashOfConfig":"37"},{"size":510,"mtime":1611332705981,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"1fx2335",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\Dashboard.jsx",["155","156"],"import React, { useEffect, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { getCurrentProfile, delAccount } from \"../../actions/profile\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DashboardActions from \"./DashboardActions\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  delAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      {\" \"}\r\n      <h1 style={{margin:\"5% auto 3% auto\"}} className=\"large text-primary\">Dashboard</h1>\r\n      {!profile === true ? (\r\n        <Fragment>\r\n          <Typography variant=\"h2\" component=\"h2\">\r\n            Dashboard\r\n          </Typography>\r\n          <p className=\"lead\"> Hello {user.name}</p>\r\n          <p>Click the below button to create your profile</p>\r\n          <Link to=\"/createProfile\" className=\"btn btn-primary my-1\">\r\n            Let's Go\r\n          </Link>\r\n        </Fragment>\r\n      ) : (\r\n        <div style={{ display: \"flex\" }}>\r\n          <Card varient=\"outlined\" style={{ width: \"30%\" }}>\r\n            <CardContent>\r\n              <img\r\n                style={{ borderRadius: \"120px\",width:\"80%\" }}\r\n                src={profile.user.avatar}\r\n              ></img>\r\n              <p className=\"lead\"> Hello {user.name}</p>\r\n              <DashboardActions />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <div style={{ width: \"2%\" }}></div>\r\n\r\n          <Card varient=\"outlined\">\r\n            <CardContent>\r\n              <Experience experience={profile.experience} />\r\n              <Education education={profile.education} />\r\n\r\n              <div className=\"my-2\">\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => delAccount(user._id)}\r\n                >\r\n                  <i className=\"fas fa-user-minus\" /> Delete My Account\r\n                </button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  delAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, delAccount })(\r\n  Dashboard\r\n);\r\n\r\n/*\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function OutlinedCard() {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          be{bull}nev{bull}o{bull}lent\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          adjective\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\n<Avatar\r\n              avatarStyle=\"Circle\"\r\n              topType=\"Hat\"\r\n              accessoriesType=\"Sunglasses\"\r\n              facialHairType=\"Blank\"\r\n              clotheType=\"Hoodie\"\r\n              clotheColor=\"PastelBlue\"\r\n              eyeType=\"Happy\"\r\n              eyebrowType=\"FlatNatural\"\r\n              mouthType=\"Default\"\r\n              skinColor=\"Brown\"\r\n            />\r\n\r\n */\r\n","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\Experience.jsx",[],["157","158"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\Education.jsx",[],["159","160"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\dashboard\\DashboardActions.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\auth\\Login.jsx",["161"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\utils\\setAuthToken.js",[],["162","163"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile-forms\\UpdateProfile.jsx",["164"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst UpdateProfile = ({\r\n  profile: { profile, loading },\r\n  makeProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    bio: \"\",\r\n    githubUsername: \"\",\r\n    socialMedia: {\r\n      twitter: \"\",\r\n      facebook: \"\",\r\n      linkedin: \"\",\r\n      youtube: \"\",\r\n      instagram: \"\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      githubUsername:\r\n        loading || !profile.githubUsername ? \"\" : profile.githubUsername,\r\n      socialMedia: (profile.socialMedia)\r\n        ? {\r\n            twitter:loading || !profile.socialMedia.twitter\r\n            ? \"\"\r\n            :  profile.socialMedia.twitter,\r\n            facebook:\r\n              loading || !profile.socialMedia.facebook\r\n                ? \"\"\r\n                : profile.socialMedia.facebook,\r\n            linkedin:\r\n              loading || !profile.socialMedia.linkedin\r\n                ? \"\"\r\n                : profile.socialMedia.linkedin,\r\n            youtube:\r\n              loading || !profile.socialMedia.youtube\r\n                ? \"\"\r\n                : profile.socialMedia.youtube,\r\n            instagram:\r\n              loading || !profile.socialMedia.instagram\r\n                ? \"\"\r\n                : profile.socialMedia.instagram,\r\n          }\r\n        : {\r\n            twitter: \"\",\r\n            facebook: \"\",\r\n            linkedin: \"\",\r\n            youtube: \"\",\r\n            instagram: \"\",\r\n          },\r\n    });\r\n  }, [loading,getCurrentProfile]);\r\n\r\n  const customStyle = {\r\n    width: \"80%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"white\",\r\n  };\r\n\r\n  const addingInput = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const addingSocialLinks = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({ ...formData, socialMedia: { ...formData.socialMedia,[name]: value } });\r\n  };\r\n\r\n  // Form Submission\r\n  const formSubmit =  (event) => {\r\n    event.preventDefault();\r\n    makeProfile(formData, history, true);\r\n    setFormData({\r\n      company: \"\",\r\n      website: \"\",\r\n      location: \"\",\r\n      status: \"\",\r\n      skills: \"\",\r\n      bio: \"\",\r\n      githubUsername: \"\",\r\n      socialMedia: {\r\n        twitter: \"\",\r\n        facebook: \"\",\r\n        linkedin: \"\",\r\n        youtube: \"\",\r\n        instagram: \"\",\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={customStyle}>\r\n      <h1 classNameName=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <form className=\"form\" onSubmit={formSubmit}>\r\n        <div className=\"form-group\">\r\n          <select\r\n            name=\"status\"\r\n            required\r\n            value={formData.status}\r\n            onChange={addingInput}\r\n          >\r\n            <option value=\"\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={formData.company}\r\n            onChange={addingInput}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={formData.website}\r\n            onChange={addingInput}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={formData.location}\r\n            onChange={addingInput}\r\n          />\r\n          <small className=\"form-text\">\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={formData.skills}\r\n            onChange={addingInput}\r\n            required\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubUsername\"\r\n            value={formData.githubUsername}\r\n            onChange={addingInput}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={formData.bio}\r\n            onChange={addingInput}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <Fragment>\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-twitter fa-2x\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Twitter URL\"\r\n              name=\"twitter\"\r\n              value={formData.socialMedia.twitter}\r\n              onChange={addingSocialLinks}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-facebook fa-2x\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Facebook URL\"\r\n              name=\"facebook\"\r\n              value={formData.socialMedia.facebook}\r\n              onChange={addingSocialLinks}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-youtube fa-2x\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"YouTube URL\"\r\n              name=\"youtube\"\r\n              value={formData.socialMedia.youtube}\r\n              onChange={addingSocialLinks}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Linkedin URL\"\r\n              name=\"linkedin\"\r\n              value={formData.socialMedia.linkedin}\r\n              onChange={addingSocialLinks}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group social-input\">\r\n            <i className=\"fab fa-instagram fa-2x\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Instagram URL\"\r\n              name=\"instagram\"\r\n              value={formData.socialMedia.instagram}\r\n              onChange={addingSocialLinks}\r\n            />\r\n          </div>\r\n        </Fragment>\r\n\r\n        <div style={{ width: \"40%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n          <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n          <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n            Go Back\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nUpdateProfile.propTypes = {\r\n  makeProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { makeProfile, getCurrentProfile })(\r\n  withRouter(UpdateProfile)\r\n);\r\n","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\post\\CommentItem.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\auth.js",["165"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n  DELETE_PROFILE,\r\n} from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  // \"action\" contains 2 mandatory things : type & payload(body of the data)\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_FAILURE:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAILED:\r\n    case LOGOUT:\r\n    case DELETE_PROFILE:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["166","167"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\post.js",["168"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\posts\\PostItem.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\posts\\Posts.jsx",["169"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../Spinner\";\r\nimport PostItem from \"./PostItem\";\r\n\r\nimport { fetchPosts } from \"../../actions/post\";\r\n\r\nconst Posts = ({\r\n  fetchPosts,\r\n  post: { posts, loading },\r\n  auth: { isAuthenticated },\r\n}) => {\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [fetchPosts]);\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i>\r\n        Here is your feed\r\n      </p>\r\n      {isAuthenticated && (\r\n        <div className=\"dash-buttons\">\r\n          <Link to=\"/newPost\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              Create a new post\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"posts\">\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  fetchPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(Posts);\r\n",["170","171"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\auth\\SignUp.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile-forms\\AddExperience.jsx",[],["172","173"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\Spinner.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile\\ProfileGithub.jsx",["174"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\n\r\n\r\nconst ProfileGithub = ({ userName, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(userName);\r\n  }, [getGithubRepos]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n      {repos &&\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n              <div>\r\n                  <h4>\r\n                      <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          {repo.name}\r\n                      </a>\r\n                  </h4>\r\n                  <p>{repo.description}</p>\r\n              </div>\r\n              <div>\r\n                  <ul>\r\n                      <li className=\"badge badge-primary\">\r\n                          Stars: {repo.stars}\r\n                      </li>\r\n                      <li className=\"badge badge-dark\">\r\n                          Watchers: {repo.watchers}\r\n                      </li>\r\n                      <li className=\"badge badge-light\">\r\n                          Forks: {repo.forks}\r\n                      </li>\r\n                  </ul>\r\n              </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  repos: PropTypes.array.isRequired,\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  userName: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n",["175","176"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\profile.js",["177"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_ALL_PROFILES,\r\n  GET_REPOS,\r\n} from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  profile: null, // Stores all our profile data\r\n  profiles: [], // Stores the profiles of the developers\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case UPDATE_PROFILE:\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profile: payload,\r\n      };\r\n    case GET_ALL_PROFILES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        profiles: payload,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        repos: payload,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      state = {};\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profiles\\ProfileItem.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\store.js",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\posts\\PostForm.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\actions\\profile.js",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\index.js",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\post\\Post.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\actions\\alert.js",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\App.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\routing\\PrivateRoute.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile\\Profile.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\actions\\post.js",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\layout\\Navbar.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile-forms\\CreateProfile.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\post\\CommentForm.jsx",["178"],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\profile\\ProfileEducation.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\layout\\Alert.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\components\\layout\\Landing.jsx",[],"D:\\Files\\Problems\\backend-intro\\devCorner\\client\\src\\reducers\\alert.js",["179"],{"ruleId":"180","severity":1,"message":"181","line":8,"column":8,"nodeType":"182","messageId":"183","endLine":8,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":46,"column":15,"nodeType":"186","endLine":49,"endColumn":16},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"187","replacedBy":"191"},{"ruleId":"189","replacedBy":"192"},{"ruleId":"180","severity":1,"message":"193","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":12},{"ruleId":"187","replacedBy":"194"},{"ruleId":"189","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":72,"column":6,"nodeType":"198","endLine":72,"endColumn":33,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":19,"column":1,"nodeType":"202","endLine":55,"endColumn":2},{"ruleId":"187","replacedBy":"203"},{"ruleId":"189","replacedBy":"204"},{"ruleId":"200","severity":1,"message":"201","line":19,"column":1,"nodeType":"202","endLine":75,"endColumn":2},{"ruleId":"180","severity":1,"message":"205","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":20},{"ruleId":"187","replacedBy":"206"},{"ruleId":"189","replacedBy":"207"},{"ruleId":"187","replacedBy":"208"},{"ruleId":"189","replacedBy":"209"},{"ruleId":"196","severity":1,"message":"210","line":10,"column":6,"nodeType":"198","endLine":10,"endColumn":22,"suggestions":"211"},{"ruleId":"187","replacedBy":"212"},{"ruleId":"189","replacedBy":"213"},{"ruleId":"200","severity":1,"message":"201","line":18,"column":1,"nodeType":"202","endLine":52,"endColumn":2},{"ruleId":"180","severity":1,"message":"214","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":5,"column":1,"nodeType":"202","endLine":16,"endColumn":2},"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["215"],"no-negated-in-lhs",["216"],["215"],["216"],"'Fade' is defined but never used.",["215"],["216"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubUsername', 'profile.location', 'profile.skills', 'profile.socialMedia', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["217"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["215"],["216"],"'makeStyles' is defined but never used.",["215"],["216"],["215"],["216"],"React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["218"],["215"],["216"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.bio, profile.githubUsername, profile.socialMedia]",{"range":"223","text":"224"},"Update the dependencies array to be: [getGithubRepos, userName]",{"range":"225","text":"226"},[2229,2256],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.bio, profile.githubUsername, profile.socialMedia]",[304,320],"[getGithubRepos, userName]"]